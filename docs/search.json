[{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"or-use-your-own-cdm-connection-in-which-case-the-table-needs-to-be-added-to-the-cdm-on-how-to-do-this-see-the-run_this-r-script","dir":"Articles","previous_headings":"","what":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","title":"Summary","text":"","code":"cdm <-  PETDiagnostics::mockPregnancy(mothertable = NULL,                           babytable = NULL,                           pregnancy_size = 100,                           fetus_size = 110,                           seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-women-and-pregnancies-are-there","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many women and pregnancies are there?","title":"Summary","text":"","code":"PETOverviewMother <- PETDiagnostics::getOverview(cdm$mothertable)  DT::datatable(PETOverviewMother)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-pregnancies-and-fetuses-are-there","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many pregnancies and fetuses are there?","title":"Summary","text":"","code":"PETOverviewBaby <- PETDiagnostics::getOverview(cdm$babytable)  DT::datatable(PETOverviewBaby)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-pregnancies-are-there-per-year","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many pregnancies are there per year?","title":"Summary","text":"","code":"AnnualPETOverviewMother <- PETDiagnostics::getAnnualOverview(cdm$mothertable) DT::datatable(AnnualPETOverviewMother)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-missing-values-are-there-in-the-mothertable","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many missing values are there in the mothertable?","title":"Summary","text":"first 8 variables (pregnancy_single) missings required variables, .e. unknown value mapped zero, observations missing values considered","code":"missingSummaryMother <- PETDiagnostics::getMissings(cdm$mothertable)  DT::datatable(missingSummaryMother)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-missing-values-are-there-in-the-babytable","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many missing values are there in the babytable?","title":"Summary","text":"first 2 variables (fetus_id) missings required variables, .e. unknown value mapped zero, observations missing values considered","code":"missingSummaryBaby <- PETDiagnostics::getMissings(cdm$babytable)  DT::datatable(missingSummaryBaby)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-many-unknown-values-are-there-in-the-mothertable","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How many unknown values are there in the mothertable?","title":"Summary","text":"","code":"unknownSummaryMother <- PETDiagnostics::getUnknown(cdm$mothertable) DT::datatable(unknownSummaryMother)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"end-after-start-counts-the-occasions-in-which-the-pregnancy-end-date-happened-after-the-start-date-plus-the-minimum-of-pre-defined-gestational-age","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script) > How do dates and gestational age add up in the mothertable?","what":"“end after start” counts the occasions in which the pregnancy end date happened after the start date plus the minimum of pre-defined gestational age","title":"Summary","text":"","code":"gestationalAgeMatch <- PETDiagnostics::summariseGestationalAge(cdm$mothertable,minGestAge_Days = 21) %>% dplyr::collect() DT::datatable(gestationalAgeMatch)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"what-is-the-minimum-and-maximum-of-pregnancy-start-and-end-dates-as-well-as-the-distribution-of-gestational-age","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"What is the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age ?","title":"Summary","text":"","code":"valueDatesAgeDist <- PETDiagnostics::getValueDatesAgeDist(cdm$mothertable) DT::datatable(valueDatesAgeDist)"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"missingunknown-information-counts-the-missingunknown-information-in-either-pregnancy-outcome-or-mode-of-delivery-there-should-not-be-any-missings","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script) > How do outcome and mode of delivery add up in the mothertable?","what":"“missing/unknown information” counts the missing/unknown information in either pregnancy outcome or mode of delivery (there should not be any missings)","title":"Summary","text":"","code":"outcomeModeMatch <- PETDiagnostics::checkOutcomeMode(cdm$mothertable) DT::datatable(outcomeModeMatch)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"missing-multiple-counts-the-missing-information-in-either-pregnancy-single-or-pregnancy-number-fetus","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script) > How do number of fetuses and liveborns add up in the mothertable?","what":"“missing multiple” counts the missing information in either pregnancy single or pregnancy number fetus","title":"Summary","text":"","code":"fetusesLivebornNumber <- PETDiagnostics::checkFetusesLiveborn(cdm$mothertable) DT::datatable(fetusesLivebornNumber)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"missing_nooffetus-counts-the-missing-information-in-pregnancy-number-fetus","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script) > How do number of fetuses and liveborns add up in the mothertable and babytable?","what":"“missing_noOfFetus” counts the missing information in pregnancy number fetus","title":"Summary","text":"","code":"fetusIdMatch <- PETDiagnostics::checkFetusId(cdm$mothertable,cdm$babytable) DT::datatable(fetusIdMatch)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"what-is-the-distribution-of-birth-weight-in-the-baby-table","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"What is the distribution of birth weight in the baby table?","title":"Summary","text":"","code":"valueWeightDist <- PETDiagnostics::getValueWeightDist(cdm$babytable)  DT::datatable(valueWeightDist)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-does-the-missingunknown-data-pattern-of-both-tables-the-mothertable-and-the-babytable-look-like","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How does the missing/unknown data pattern of both tables, the mothertable and the babytable look like?","title":"Summary","text":"","code":"bitSetOverviewAll  <- PETDiagnostics::getBitSet(cdm$mothertable,cdm$babytable) DT::datatable(bitSetOverviewAll)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-does-the-missingunknown-data-pattern-of-the-mothertable-look-like","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How does the missing/unknown data pattern of the mothertable look like?","title":"Summary","text":"","code":"bitSetOverviewMother  <- PETDiagnostics::getBitSet(cdm$mothertable,babytable=NULL) DT::datatable(bitSetOverviewMother)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/articles/Summary.html","id":"how-does-the-missingunknown-data-pattern-of-the-babytable-look-like","dir":"Articles","previous_headings":"or use your own cdm connection, in which case the table needs to be added to the cdm (on how to do this, see the run_this.R script)","what":"How does the missing/unknown data pattern of the babytable look like?","title":"Summary","text":"","code":"bitSetOverviewBaby  <- PETDiagnostics::getBitSet(mothertable=NULL,cdm$babytable) DT::datatable(bitSetOverviewBaby)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Theresa Burkard. Author, maintainer.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burkard T (2024). PETDiagnostics: Diagnostics OMOP perinatal expansion (OMOP). R package version 0.0.0.9000, https://oxford-pharmacoepi.github.io/PETDiagnostics/.","code":"@Manual{,   title = {PETDiagnostics: Diagnostics for the OMOP perinatal expansion (OMOP)},   author = {Theresa Burkard},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://oxford-pharmacoepi.github.io/PETDiagnostics/}, }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/index.html","id":"petdiagnostics","dir":"","previous_headings":"","what":"Diagnostics for the OMOP perinatal expansion (OMOP)","title":"Diagnostics for the OMOP perinatal expansion (OMOP)","text":"goal PETDiagnostics assess feasibility data sources perform observational studies pregnancy related topics using pregnancy extension tables OHDSI.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diagnostics for the OMOP perinatal expansion (OMOP)","text":"can install development version PETDiagnostics like :","code":"install.packages(\"remotes\") remotes::install_github(\"oxford-pharmacoepi/PETDiagnostics\")"},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/index.html","id":"create-a-reference-to-data-in-the-omop-cdm-format","dir":"","previous_headings":"Example","what":"Create a reference to data in the OMOP CDM format","title":"Diagnostics for the OMOP perinatal expansion (OMOP)","text":"PETDiagnostics package designed work data OMOP CDM format, first step create reference data using CDMConnector package. ´ll generate example reference simulated data (see create reference database please consult CDMConnector package documentation).","code":"library(PETDiagnostics) library(CDMConnector) #> Warning: package 'CDMConnector' was built under R version 4.2.2 library(dplyr) #> Warning: package 'dplyr' was built under R version 4.2.2 #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union   # We first need to create a mock database with a cdm reference # this function creates a motherTable and a babyTable cdm<-mockPregnancy(motherTable = NULL,                           babyTable = NULL,                           pregnancy_size = 100,                           fetus_size = 110,                           seed = 1)  # this is what the table(s) look like # use the motherTable and/or the babyTable depending on your data head(cdm$motherTable) #> # Source:   SQL [6 x 27] #> # Database: DuckDB 0.5.1 [tburkard@Windows 10 x64:R 4.2.1/:memory:] #>   pregna…¹ perso…² pregnanc…³ pregnanc…⁴ gesta…⁵ pregn…⁶ pregn…⁷ pregn…⁸ pregn…⁹ #>      <int>   <int> <date>     <date>       <dbl>   <dbl>   <dbl>   <int>   <dbl> #> 1        1      68 2010-12-05 2011-02-01      58 4092289 4015701 4188539 4095714 #> 2        2      39 2004-09-01 2005-02-21     173 4081422       0 4188540 4053842 #> 3        3       1 2019-10-03 2020-01-19     108 4092289       0 4188540 4242253 #> 4        4      34 2001-05-15 2002-01-08     238  443213       0 4188539 4095714 #> 5        5      87 2010-05-15 2011-01-14     244 4092289 4125611 4188540 4095714 #> 6        6      43 2018-03-21 2018-08-13     145       0       0 4188539 4338692 #> # … with 18 more variables: pregnancy_number_fetuses <int>, #> #   pregnancy_number_liveborn <int>, prev_pregnancy_gravidity <int>, #> #   prev_livebirth_number <int>, prev_stillbirth_number <int>, #> #   prev_miscar_number <int>, prev_top_number <int>, prev_top12_number <int>, #> #   prev_pregnancy_parity <dbl>, pregnancy_bmi <int>, #> #   pregnancy_outcome_source_value <chr>, #> #   pregnancy_mode_delivery_source_value <chr>, pregnancy_folic <int>, … head(cdm$babyTable) #> # Source:   SQL [6 x 8] #> # Database: DuckDB 0.5.1 [tburkard@Windows 10 x64:R 4.2.1/:memory:] #>   pregnancy_id fetus_id birth_outcome birth_we…¹ birth…² birth…³ birth…⁴ birth…⁵ #>   <chr>        <chr>            <dbl>      <int>   <int>   <int>   <int>   <int> #> 1 1            1              4092289       2447 4188540 4188539 4188540       6 #> 2 2            2              4092289       1827 4188540 4188540 4188539      10 #> 3 3            3              4092289       1056 4188539 4188539 4188539       0 #> 4 4            4                   NA        786 4188539 4188539 4188539      10 #> 5 5            5              4092289       3716 4188540 4188539 4188539       8 #> 6 6            6               443213       4201 4188540 4188540 4188539       7 #> # … with abbreviated variable names ¹​birth_weight, ²​birth_con_malformation, #> #   ³​birth_sga, ⁴​birth_fgr, ⁵​birth_apgar"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/index.html","id":"if-only-the-babytable-is-available-only-the-overview-missing-weightdist-and-bitset-check-is-possible-put-mothertable--null","dir":"","previous_headings":"Execute the diagnostic checks of your table(s)","what":"if only the babyTable is available, only the “overview”, “missing”, “weightDist”, and “bitSet” check is possible, put motherTable = NULL","title":"Diagnostics for the OMOP perinatal expansion (OMOP)","text":"","code":"resultList <- executeChecks (                           motherTable = cdm$motherTable,                                          babyTable = cdm$babyTable,                                             checks = c(\"overview\",\"annualOverview\",\"missing\", \"unknown\",\"gestationalAge\",\"datesAgeDist\",\"outcomeMode\",                                      \"fetusesLiveborn\",\"fetusid\",\"weightDist\",\"bitSet\"),                                                  minCellCount = 5,                           minGestAge_Days = 21,                           verbose = FALSE) #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> Warning: attributes are not identical across measure variables; they will be #> dropped #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> No id variables; using all as measure variables #> Warning: attributes are not identical across measure variables; they will be #> dropped"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/index.html","id":"outputfolder-is-the-folder-to-write-to","dir":"","previous_headings":"Exporting results","what":"outputFolder is the folder to write to","title":"Diagnostics for the OMOP perinatal expansion (OMOP)","text":"","code":"writeResultToDisk (resultList = resultList, databaseId = \"mock\", outputFolder = tempdir())"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 PETDiagnostics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusesLiveborn.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","title":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","text":"tells us number infants liveborns add mother table","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusesLiveborn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","text":"","code":"checkFetusesLiveborn(worktable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusesLiveborn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","text":"worktable motherTable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusesLiveborn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","text":"returns table checks fetuses liveborns","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusesLiveborn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how number of infants and liveborns add up in the mother table — checkFetusesLiveborn","text":"","code":"# \\donttest{ cdm <- mockPregnancy() checkFetusesLiveborn(cdm$mothertable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusId.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","title":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","text":"tells us number fetuses liveborns add mother table babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","text":"","code":"checkFetusId(mothertable, babytable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","text":"mothertable mothertable babytable babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","text":"returns table checks fetuses liveborns","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkFetusId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how the number of fetuses and liveborns add up in the mother table and babytable — checkFetusId","text":"","code":"# \\donttest{ cdm <- mockPregnancy() checkFetusId(cdm$mothertable,cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkOutcomeMode.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","title":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","text":"tells us outcome mode delivery add mother table","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkOutcomeMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","text":"","code":"checkOutcomeMode(worktable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkOutcomeMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","text":"worktable mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkOutcomeMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","text":"returns table information differences outcome mode delivery data","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/checkOutcomeMode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how outcome and mode of delivery add up in the mother table — checkOutcomeMode","text":"","code":"# \\donttest{ cdm <- mockPregnancy() checkOutcomeMode(cdm$mothertable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/executeChecks.html","id":null,"dir":"Reference","previous_headings":"","what":"this function executes the desired checks ","title":"this function executes the desired checks ","text":"function executes desired checks \"overview\",\"annualOverview\",\"missing\", \"unknown\",\"gestationalAge\",\"datesAgeDist\",\"outcomeMode\", \"fetusesLiveborn\",\"fetusid\",\"weightDist\",\"bitSet\"","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/executeChecks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"this function executes the desired checks ","text":"","code":"executeChecks(   mothertable = NULL,   babytable = NULL,   checks = c(\"overview\", \"annualOverview\", \"missing\", \"unknown\", \"gestationalAge\",     \"datesAgeDist\", \"outcomeMode\", \"fetusesLiveborn\", \"fetusid\", \"weightDist\", \"bitSet\"),   minCellCount = 5,   minGestAge_Days = 21,   verbose = FALSE )"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/executeChecks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"this function executes the desired checks ","text":"mothertable input table according mothertable pregnancy extension Table OHDSI, can NULL babytable input table according mothertable pregnancy extension Table OHDSI, can NULL checks chose checks want perform, checks possible depending tables available minCellCount chose number want obscure counts, 0 obscured minGestAge_Days chose number think pregnancy entries wrong / verbose give information package performing moment","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/executeChecks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"this function executes the desired checks ","text":"individual result tables data obscured need ","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/executeChecks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"this function executes the desired checks ","text":"","code":"# \\donttest{ cdm <- mockPregnancy() executeChecks(cdm$mothertable,cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getAnnualOverview.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how many pregnancies there are per year — getAnnualOverview","title":"tells us how many pregnancies there are per year — getAnnualOverview","text":"tells us many pregnancies per year","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getAnnualOverview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how many pregnancies there are per year — getAnnualOverview","text":"","code":"getAnnualOverview(mothertable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getAnnualOverview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how many pregnancies there are per year — getAnnualOverview","text":"mothertable mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getAnnualOverview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how many pregnancies there are per year — getAnnualOverview","text":"table shows number pregnancies per year","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getAnnualOverview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how many pregnancies there are per year — getAnnualOverview","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getAnnualOverview(cdm$mothertable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getBitSet.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","title":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","text":"tells us missing/unknown data pattern tables, mother baby table looks like (depending input)","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getBitSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","text":"","code":"getBitSet(mothertable = NULL, babytable = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getBitSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","text":"mothertable mothertable babytable babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getBitSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","text":"returns table pattern missing data","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getBitSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how the missing/unknown data pattern of both tables, mother or baby table looks like (depending on the input) — getBitSet","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getBitSet(cdm$mothertable,cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getMissings.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","title":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","text":"tells us many missing values mother table infant table (depending input)","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getMissings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","text":"","code":"getMissings(worktable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getMissings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","text":"worktable mothertable babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getMissings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","text":"returns table missings","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getMissings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how many missing values are there in the mother table or infant table (depending on the input) — getMissings","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getMissings(cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getOverview.html","id":null,"dir":"Reference","previous_headings":"","what":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","title":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","text":"Tells us many women pregnancies mother table assessed many pregnancies infants case infant table assessed","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getOverview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","text":"","code":"getOverview(workTable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getOverview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","text":"workTable motherTable babyTable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getOverview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","text":"returns table overview","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getOverview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tells us how many women and pregnancies there are when the mother table is assessed and how many pregnancies and infants there are in case the infant table is assessed — getOverview","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getOverview(cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getUnknown.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","title":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","text":"tells us many unknown values mother table (unknown values possible infant table)","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getUnknown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","text":"","code":"getUnknown(mothertable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getUnknown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","text":"mothertable mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getUnknown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","text":"returns table zero counts required variables mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getUnknown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how many unknown values there are in the mother table (no unknown values possible for the infant table) — getUnknown","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getUnknown(cdm$mothertable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueDatesAgeDist.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","title":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","text":"tells us minimum maximum pregnancy start end dates well distribution gestational age ","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueDatesAgeDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","text":"","code":"getValueDatesAgeDist(mothertable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueDatesAgeDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","text":"mothertable mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueDatesAgeDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","text":"returns table distrubtion pregnancy starte date, end date, gestational Age","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueDatesAgeDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us what the minimum and maximum of pregnancy start and end dates as well as the distribution of gestational age are — getValueDatesAgeDist","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getValueDatesAgeDist(cdm$mothertable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueWeightDist.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","title":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","text":"tells us distribution birth weight baby table ","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueWeightDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","text":"","code":"getValueWeightDist(babytable)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueWeightDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","text":"babytable babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueWeightDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","text":"returns values birthweight","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/getValueWeightDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us what the distribution of birth weight in the baby table is — getValueWeightDist","text":"","code":"# \\donttest{ cdm <- mockPregnancy() getValueWeightDist(cdm$babytable) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/mockPregnancy.html","id":null,"dir":"Reference","previous_headings":"","what":"This function creates a mock pregnant and fetus population — mockPregnancy","title":"This function creates a mock pregnant and fetus population — mockPregnancy","text":"function creates mock pregnant fetus population","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/mockPregnancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function creates a mock pregnant and fetus population — mockPregnancy","text":"","code":"mockPregnancy(   mothertable = NULL,   babytable = NULL,   pregnancy_size = 100,   fetus_size = 110,   seed = 1 )"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/mockPregnancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function creates a mock pregnant and fetus population — mockPregnancy","text":"mothertable creates table according mothertable pregnancy extension Table OHDSI babytable creates table according babytable pregnancy extension Table OHDSI pregnancy_size chose number pregnancies fetus_size chose number fetuses, equal larger number pregnancies seed chose numer, like 1 example","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/mockPregnancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function creates a mock pregnant and fetus population — mockPregnancy","text":"mock cdm reference mothertable babytable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/mockPregnancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function creates a mock pregnant and fetus population — mockPregnancy","text":"","code":"# \\donttest{ cdm <- mockPregnancy() cdm # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/PETDiagnostics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PETDiagnostics: Diagnostics for the OMOP perinatal expansion (OMOP) — PETDiagnostics-package","title":"PETDiagnostics: Diagnostics for the OMOP perinatal expansion (OMOP) — PETDiagnostics-package","text":"package assesses feasibility data sources implement perinatal expansion OMOP data. package contains several quality checks test feasibility fitness perinatal expansion data. function executeChecks() allows running checks returns list containing results check expansion table.","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/PETDiagnostics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PETDiagnostics: Diagnostics for the OMOP perinatal expansion (OMOP) — PETDiagnostics-package","text":"Maintainer: Theresa Burkard theresa.burkard@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/summariseGestationalAge.html","id":null,"dir":"Reference","previous_headings":"","what":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","title":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","text":"tells us pregnancy dates gestational age add mothertable","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/summariseGestationalAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","text":"","code":"summariseGestationalAge(worktable, minGestAge_Days)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/summariseGestationalAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","text":"worktable mothertable minGestAge_Days minimum number days gestational age test whether end (start + minGestAge_Days)","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/summariseGestationalAge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","text":"returns table dates checks","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/summariseGestationalAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tells us how pregnancy dates and gestational age add up in the mothertable — summariseGestationalAge","text":"","code":"# \\donttest{ cdm <- mockPregnancy() summariseGestationalAge(cdm$mothertable, minGestAge_Days = 28) # }"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/writeResultToDisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Write diagnostics results to a zip file on disk in given output folder. — writeResultToDisk","title":"Write diagnostics results to a zip file on disk in given output folder. — writeResultToDisk","text":"Write diagnostics results zip file disk given output folder.","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/writeResultToDisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write diagnostics results to a zip file on disk in given output folder. — writeResultToDisk","text":"","code":"writeResultToDisk(resultList, databaseId, outputFolder)"},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/writeResultToDisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write diagnostics results to a zip file on disk in given output folder. — writeResultToDisk","text":"resultList named list results databaseId database identifier outputFolder folder write ","code":""},{"path":"https://oxford-pharmacoepi.github.io/PETDiagnostics/reference/writeResultToDisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write diagnostics results to a zip file on disk in given output folder. — writeResultToDisk","text":"","code":"# \\donttest{ cdm <- mockPregnancy() resultList <- executeChecks(cdm$mothertable,cdm$babytable) writeResultToDisk(resultList = resultList, databaseId = \"test\", outputFolder= here::here()) # }"}]
